import dopamine.agents.rainbow.rainbow_agent
import dopamine.discrete_domains.atari_lib
import dopamine.discrete_domains.run_experiment
import dopamine.replay_memory.prioritized_replay_buffer
import gin.tf.external_configurables
import dopamine.discrete_domains.atari_lib 


# ---------------------------------------------------------
# The following hyperparameters follow Hessel et al. (2019).
# to implement data efficient Rainbow DQN
# https://arxiv.org/pdf/1906.05243.pdf
# ---------------------------------------------------------

# No frame skip
AtariPreprocessing.frame_skip = 1
RainbowAgent.update_period = 1

# Increase the number of steps in the multi-step returns from 3 to 20
RainbowAgent.update_horizon = 20

# Reduce the number of steps before we start sampling from replay from 20,000 to 1600
RainbowAgent.min_replay_history = 1600

# They use another architecture for the convolutional layers
RainbowAgent.architecture = 'efficient'


# Note these parameters are different from C51's.
tf.train.AdamOptimizer.beta1 = .9
tf.train.AdamOptimizer.beta2 = .999
tf.train.AdamOptimizer.learning_rate = 0.0001
tf.train.AdamOptimizer.epsilon = 0.00015

# Modify as needed.
Runner.num_iterations = 200
Runner.training_steps = 250000  
Runner.evaluation_steps = 125000  

create_agent.agent_name = 'rainbow'

# ---------------------------------------------------------
# The other hyperparameters follow Hessel et al. (2018), except for sticky_actions,
# which was False (not using sticky actions) in the original paper.
# ---------------------------------------------------------

RainbowAgent.num_atoms = 51
RainbowAgent.vmax = 10.
RainbowAgent.gamma = 0.99

RainbowAgent.target_update_period = 2000  # agent steps
RainbowAgent.epsilon_train = 0.01
RainbowAgent.epsilon_eval = 0.001
RainbowAgent.epsilon_decay_period = 250000  # agent steps
RainbowAgent.replay_scheme = 'prioritized'
RainbowAgent.tf_device = '/gpu:0'  # use '/cpu:*' for non-GPU version
RainbowAgent.optimizer = @tf.train.AdamOptimizer()

atari_lib.create_atari_environment.game_name = 'Pong'
# Sticky actions with probability 0.25, as suggested by (Machado et al., 2017).
atari_lib.create_atari_environment.sticky_actions = True

Runner.max_steps_per_episode = 27000  # agent steps

WrappedPrioritizedReplayBuffer.replay_capacity = 1000000
WrappedPrioritizedReplayBuffer.batch_size = 32
